{
	"$schema": "http://json-schema.org/draft-07/schema#",
	"type": "object",
	"properties": {
		"version": {
			"type": "string",
			"description": "Version of the configuration."
		},
		"host": {
			"type": "string",
			"description": "The host where the service will run."
		},
		"port": {
			"type": "integer",
			"description": "The port for the service."
		},
		"ssl": {
			"type": "object",
			"properties": {
				"keyfile": {
					"type": "string",
					"description": "Path to SSL key file."
				},
				"certfile": {
					"type": "string",
					"description": "Path to SSL certificate file."
				}
			},
			"required": [
				"keyfile",
				"certfile"
			],
			"description": "SSL configuration for the server."
		},
		"open_telemetry": {
			"type": "object",
			"properties": {
				"endpoint": {
					"type": "string",
					"description": "GRPC connection string for open telemetry collection agent"
				},
				"sample_ratio": {
					"type":"number",
					"exclusiveMinimum": 0,
					"maximum": 1
				}
			},
			"required": ["sample_ratio", "endpoint"]
		},
		"services": {
			"type": "array",
			"items": {
				"type": "object",
				"properties": {
					"domain": {
						"type": "string",
						"description": "Domain name for the service."
					},
					"endpoints": {
						"type": "array",
						"items": {
							"type": "object",
							"properties": {
								"path": {
									"type": "string",
									"description": "Endpoint path that will be served."
								},
								"directory": {
									"type": "string",
									"description": "Directory to serve files from."
								},
								"destination": {
									"type": "string",
									"description": "Server URL to proxy the requests there."
								},
								"backend": {
									"type": "object",
									"properties": {
										"balance_policy": {
											"type": "string",
											"enum": [
												"round-robin",
												"random",
												"least-latency"
											],
											"description": "Load balancing policy for backend servers."
										},
										"servers": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"url": {
														"type": "string",
														"description": "URL of the backend server."
													},
													"weight": {
														"type": "integer",
														"description": "Weight of the backend server for load balancing."
													}
												},
												"required": [
													"url",
													"weight"
												]
											}
										}
									},
									"required": [
										"balance_policy",
										"servers"
									]
								},
								"omit_headers": {
									"type": "array",
									"description": "List of headers to omit for secrets protection.",
									"items": {
										"type": "string"
									}
								},
								"minify": {
									"type": "array",
									"items": {
										"type": "string"
									}
								},
								"gzip": {
									"type": "boolean",
									"description": "Enable GZIP compression."
								},
								"timeout": {
									"type": "string",
									"description": "Custom timeout for backend responses."
								},
								"max_size": {
									"type": "integer",
									"description": "Max request size in bytes."
								},
								"ratelimits": {
									"type": "array",
									"items": {
										"type": "string",
										"description": "Rate limits in the format of requests per time period (e.g., ip-10/m)."
									}
								},
								"openapi": {
									"type": "string",
									"description": "Path to the OpenAPI specification for request/response validation."
								},
								"checks": {
									"type": "array",
									"description": "List of health check configurations",
									"items": {
										"type": "object",
										"required": [
											"name",
											"cron",
											"method",
											"url",
											"timeout"
										],
										"properties": {
											"name": {
												"type": "string",
												"description": "Descriptive name for the health check",
												"minLength": 1
											},
											"cron": {
												"type": "string",
												"description": "Cron expression or macro for check frequency",
												"pattern": "^(@yearly|@annually|@monthly|@weekly|@daily|@hourly|@minutely|([*\\d,-/]+\\s){4}[*\\d,-/]+)$",
												"examples": [
													"* * * * *",
													"@hourly",
													"@daily",
													"0 0 * * *"
												]
											},
											"method": {
												"type": "string",
												"description": "HTTP method for the health check",
												"enum": [
													"GET",
													"POST",
													"PUT",
													"DELETE",
													"HEAD",
													"OPTIONS",
													"PATCH",
													"CONNECT",
													"TRACE"
												]
											},
											"url": {
												"type": "string",
												"description": "Health check endpoint URL",
												"format": "uri",
												"pattern": "^https?://"
											},
											"timeout": {
												"type": "string",
												"description": "Timeout duration for health check requests",
												"pattern": "^\\d+[smh]$",
												"default": "5s",
												"examples": [
													"5s",
													"1m",
													"1h"
												]
											},
											"headers": {
												"type": "object",
												"description": "Custom headers to be sent with the health check request",
												"additionalProperties": {
													"type": "string"
												},
												"examples": [
													{
														"Host": "domain.org",
														"Authorization": "Bearer abc123"
													}
												]
											}
										}
									}
								},
								"cache": {
									"type": "boolean",
									"description": "Enable caching of response that has cache headers"
								}
							},
							"required": [
								"path"
							],
							"oneOf": [
								{
									"required": [
										"directory"
									]
								},
								{
									"required": [
										"destination"
									]
								},
								{
									"required": [
										"backend"
									]
								}
							]
						}
					}
				},
				"required": [
					"domain",
					"endpoints"
				]
			}
		}
	},
	"required": [
		"version",
		"host",
		"port",
		"services"
	]
}